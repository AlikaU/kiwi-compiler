

Derivation for valid file: ../TestFiles/DemoTestCases/SYNcomplicatedExpr
 ||| prog 
 ||| classDeclList progBody 
 ||| classDecl classDeclList progBody 
 ||| 'class' 'id' '{' varThenFuncList '}' ';' classDeclList progBody 
class  ||| 'id' '{' varThenFuncList '}' ';' classDeclList progBody 
class A  ||| '{' varThenFuncList '}' ';' classDeclList progBody 
class A {  ||| varThenFuncList '}' ';' classDeclList progBody 
class A {  ||| '}' ';' classDeclList progBody 
class A { }  ||| ';' classDeclList progBody 
class A { } ;  ||| classDeclList progBody 
class A { } ;  ||| progBody 
class A { } ;  ||| 'program' funcBody ';' funcDefList 
class A { } ; program  ||| funcBody ';' funcDefList 
class A { } ; program  ||| '{' varThenStatList '}' ';' funcDefList 
class A { } ; program {  ||| varThenStatList '}' ';' funcDefList 
class A { } ; program {  ||| 'id' varThenStatList1 '}' ';' funcDefList 
class A { } ; program { B  ||| varThenStatList1 '}' ';' funcDefList 
class A { } ; program { B  ||| assignStatTail '}' ';' funcDefList 
class A { } ; program { B  ||| indiceList assignStatTail1 '}' ';' funcDefList 
class A { } ; program { B  ||| assignStatTail1 '}' ';' funcDefList 
class A { } ; program { B  ||| assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B  ||| '=' expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B =  ||| expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B =  ||| term exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B =  ||| factor termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B =  ||| idNestListIdThenIndiceListOrAParams termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B =  ||| 'id' idNestListIdThenIndiceListOrAParams1 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x  ||| idNestListIdThenIndiceListOrAParams1 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x  ||| indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x  ||| indice indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x  ||| '[' arithExpr ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [  ||| arithExpr ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [  ||| term arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [  ||| factor termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [  ||| idNestListIdThenIndiceListOrAParams termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [  ||| 'id' idNestListIdThenIndiceListOrAParams1 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y  ||| idNestListIdThenIndiceListOrAParams1 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y  ||| indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y  ||| idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y  ||| termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y  ||| arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y  ||| ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ]  ||| indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ]  ||| indice indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ]  ||| '[' arithExpr ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [  ||| arithExpr ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [  ||| term arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [  ||| factor termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [  ||| idNestListIdThenIndiceListOrAParams termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [  ||| 'id' idNestListIdThenIndiceListOrAParams1 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y  ||| idNestListIdThenIndiceListOrAParams1 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y  ||| indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y  ||| idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y  ||| termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y  ||| arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y  ||| addOp term arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y  ||| '+' term arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y +  ||| term arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y +  ||| factor termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y +  ||| 'numInt' termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1  ||| termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1  ||| multOp factor termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1  ||| '*' factor termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 *  ||| factor termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 *  ||| idNestListIdThenIndiceListOrAParams termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 *  ||| 'id' idNestListIdThenIndiceListOrAParams1 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a  ||| idNestListIdThenIndiceListOrAParams1 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a  ||| indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a  ||| idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a  ||| termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a  ||| arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a  ||| ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ]  ||| indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ]  ||| indice indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ]  ||| '[' arithExpr ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [  ||| arithExpr ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [  ||| term arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [  ||| factor termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [  ||| idNestListIdThenIndiceListOrAParams termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [  ||| 'id' idNestListIdThenIndiceListOrAParams1 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z  ||| idNestListIdThenIndiceListOrAParams1 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z  ||| indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z  ||| indice indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z  ||| '[' arithExpr ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [  ||| arithExpr ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [  ||| term arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [  ||| factor termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [  ||| 'numInt' termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1  ||| termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1  ||| arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1  ||| addOp term arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1  ||| '+' term arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 +  ||| term arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 +  ||| factor termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 +  ||| idNestListIdThenIndiceListOrAParams termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 +  ||| 'id' idNestListIdThenIndiceListOrAParams1 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x  ||| idNestListIdThenIndiceListOrAParams1 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x  ||| indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x  ||| idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x  ||| termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x  ||| arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x  ||| ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ]  ||| indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ]  ||| idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ]  ||| termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ]  ||| arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ]  ||| ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ]  ||| indiceList idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ]  ||| idNestListIdThenIndiceListOrAParams2 termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ]  ||| termTail exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ]  ||| exprTail ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ]  ||| ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ;  ||| statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ;  ||| statement statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ;  ||| assignStat ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ;  ||| variable assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ;  ||| idNestListThenIdThenIndiceList assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ;  ||| 'id' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a  ||| indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a  ||| idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a  ||| '.' idNestListThenIdThenIndiceList assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a .  ||| idNestListThenIdThenIndiceList assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a .  ||| 'id' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b  ||| indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b  ||| idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b  ||| '.' idNestListThenIdThenIndiceList assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b .  ||| idNestListThenIdThenIndiceList assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b .  ||| 'id' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c  ||| indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c  ||| idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c  ||| '.' idNestListThenIdThenIndiceList assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c .  ||| idNestListThenIdThenIndiceList assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c .  ||| 'id' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d  ||| indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d  ||| idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d  ||| '.' idNestListThenIdThenIndiceList assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d .  ||| idNestListThenIdThenIndiceList assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d .  ||| 'id' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e  ||| indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e  ||| idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e  ||| '.' idNestListThenIdThenIndiceList assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e .  ||| idNestListThenIdThenIndiceList assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e .  ||| 'id' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f  ||| indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f  ||| indice indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f  ||| '[' arithExpr ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [  ||| arithExpr ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [  ||| term arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [  ||| factor termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [  ||| idNestListIdThenIndiceListOrAParams termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [  ||| 'id' idNestListIdThenIndiceListOrAParams1 termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g  ||| idNestListIdThenIndiceListOrAParams1 termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g  ||| indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g  ||| idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g  ||| '.' idNestListIdThenIndiceListOrAParams termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g .  ||| idNestListIdThenIndiceListOrAParams termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g .  ||| 'id' idNestListIdThenIndiceListOrAParams1 termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h  ||| idNestListIdThenIndiceListOrAParams1 termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h  ||| indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h  ||| idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h  ||| '.' idNestListIdThenIndiceListOrAParams termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h .  ||| idNestListIdThenIndiceListOrAParams termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h .  ||| 'id' idNestListIdThenIndiceListOrAParams1 termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i  ||| idNestListIdThenIndiceListOrAParams1 termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i  ||| indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i  ||| idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i  ||| '.' idNestListIdThenIndiceListOrAParams termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i .  ||| idNestListIdThenIndiceListOrAParams termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i .  ||| 'id' idNestListIdThenIndiceListOrAParams1 termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i . j  ||| idNestListIdThenIndiceListOrAParams1 termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i . j  ||| indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i . j  ||| indice indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i . j  ||| '[' arithExpr ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i . j [  ||| arithExpr ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i . j [  ||| term arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i . j [  ||| factor termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i . j [  ||| 'numInt' termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i . j [ 0  ||| termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i . j [ 0  ||| arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i . j [ 0  ||| ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i . j [ 0 ]  ||| indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i . j [ 0 ]  ||| indice indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i . j [ 0 ]  ||| '[' arithExpr ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i . j [ 0 ] [  ||| arithExpr ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i . j [ 0 ] [  ||| term arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i . j [ 0 ] [  ||| factor termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i . j [ 0 ] [  ||| idNestListIdThenIndiceListOrAParams termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i . j [ 0 ] [  ||| 'id' idNestListIdThenIndiceListOrAParams1 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i . j [ 0 ] [ a  ||| idNestListIdThenIndiceListOrAParams1 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i . j [ 0 ] [ a  ||| indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i . j [ 0 ] [ a  ||| idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i . j [ 0 ] [ a  ||| termTail arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i . j [ 0 ] [ a  ||| arithExprTail ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i . j [ 0 ] [ a  ||| ']' indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i . j [ 0 ] [ a ]  ||| indiceList idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i . j [ 0 ] [ a ]  ||| idNestListIdThenIndiceListOrAParams2 termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i . j [ 0 ] [ a ]  ||| termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i . j [ 0 ] [ a ]  ||| arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i . j [ 0 ] [ a ]  ||| ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i . j [ 0 ] [ a ] ]  ||| indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i . j [ 0 ] [ a ] ]  ||| indice indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i . j [ 0 ] [ a ] ]  ||| '[' arithExpr ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i . j [ 0 ] [ a ] ] [  ||| arithExpr ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i . j [ 0 ] [ a ] ] [  ||| term arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i . j [ 0 ] [ a ] ] [  ||| factor termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i . j [ 0 ] [ a ] ] [  ||| 'numInt' termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i . j [ 0 ] [ a ] ] [ 1  ||| termTail arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i . j [ 0 ] [ a ] ] [ 1  ||| arithExprTail ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i . j [ 0 ] [ a ] ] [ 1  ||| ']' indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i . j [ 0 ] [ a ] ] [ 1 ]  ||| indiceList idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i . j [ 0 ] [ a ] ] [ 1 ]  ||| idNestListThenIdThenIndiceList1 assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] [ y + 1 * a ] [ z [ 1 + x ] ] ; a . b . c . d . e . f [ g . h . i . j [ 0 ] [ a ] ] [ 1 ]  ||| assignOp expr ';' statementList '}' ';' funcDefList 
class A { } ; program { B = x [ y ] 