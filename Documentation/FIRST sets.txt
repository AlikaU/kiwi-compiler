First sets:


classDeclList:	ε, 'class'
classDecl:	'class'
varThenFuncList:	ε, 'int', 'float', 'id'
varThenFuncList1:	';', '(', ε, '['
varDeclList:	ε, 'int', 'float', 'id'
funcDefList:	ε, 'int', 'float', 'id'
progBody:	'program'
funcBody:	'{'
varThenStatList:	'int', 'float', 'id', ε, 'if', 'for', 'get', 'put', 'return'
varThenStatList1:	'id', ε, '[', '.', '='
assignStatTail1:	'.', '='
statementList:	ε, 'id', 'if', 'for', 'get', 'put', 'return'
arraySizeList:	ε, '['
statementNotAssign:	'if', 'for', 'get', 'put', 'return'
statBlock:	'{', ε, 'id', 'if', 'for', 'get', 'put', 'return'
exprTail:	ε, '+', '-', 'or', '==', '<>', '<', '>', '<=', '>='
arithExprTail:	ε, '+', '-', 'or'
sign:	'+', '-'
termTail:	ε, '*', '/', 'and'
factor:	'numInt', 'numFloat', '(', 'not', 'id', '+', '-'
idNestListThenId:	'id'
idNestListThenId1:	'.', ε, '['
idNestListThenIdThenIndiceList:	'id'
idNestListThenIdThenIndiceList1:	'.', ε
idNestListIdThenIndiceListOrAParams:	'id'
idNestListIdThenIndiceListOrAParams1:	'(', ε, '[', '.'
idNestListIdThenIndiceListOrAParams2:	'.', ε
idNest:	'id'
idNestList:	ε, 'id'
indice:	'['
indiceList:	ε, '['
arraySize:	'['
type:	'int', 'float', 'id'
fParams:	ε, 'int', 'float', 'id'
fParamsTailList:	ε, ','
aParams:	ε, 'numInt', 'numFloat', '(', 'not', 'id', '+', '-'
aParamsTailList:	ε, ','
fParamsTail:	','
aParamsTail:	','
assignOp:	'='
relOp:	'==', '<>', '<', '>', '<=', '>='
addOp:	'+', '-', 'or'
multOp:	'*', '/', 'and'
typeId:	'int', 'float', 'id'
funcHead:	'int', 'float', 'id'
varDecl:	'int', 'float', 'id'
variable:	'id'
prog:	ε, 'class', 'program'
funcDef:	'int', 'float', 'id'
assignStatTail:	ε, '[', '.', '='
assignStat:	'id'
statement:	'id', 'if', 'for', 'get', 'put', 'return'
term:	'numInt', 'numFloat', '(', 'not', 'id', '+', '-'
expr:	'numInt', 'numFloat', '(', 'not', 'id', '+', '-'
arithExpr:	'numInt', 'numFloat', '(', 'not', 'id', '+', '-'
relExpr:	'numInt', 'numFloat', '(', 'not', 'id', '+', '-'